import { UsersService } from './users.service';
import { CreateUserDto } from './dto/create-user.dto';
import { UpdateUserDto, UpdateUserPINDto } from './dto/update-user.dto';
export declare class UsersController {
    private readonly usersService;
    constructor(usersService: UsersService);
    create(createUserDto: CreateUserDto): Promise<{
        deletedAt: Date;
        name: string;
        addressWallet: string;
        email: string;
        gender: string;
        dateOfBirth: Date;
        phoneNumber: string;
        indentifyNumber: string;
        PIN: string;
        id: string;
        emailVerifyToken: string;
        forgotPasswordToken: string;
        refreshToken: string;
        userStatus: import(".prisma/client").$Enums.UserStatus;
        roleId: string;
        createdAt: Date;
        updatedAt: Date;
        createdBy: import(".prisma/client").Prisma.JsonValue;
        updatedBy: import(".prisma/client").Prisma.JsonValue;
        deletedBy: import(".prisma/client").Prisma.JsonValue;
    }>;
    updatePIN(PIN: UpdateUserPINDto, id: string): Promise<{
        deletedAt: Date;
        name: string;
        addressWallet: string;
        email: string;
        gender: string;
        dateOfBirth: Date;
        phoneNumber: string;
        indentifyNumber: string;
        PIN: string;
        id: string;
        emailVerifyToken: string;
        forgotPasswordToken: string;
        refreshToken: string;
        userStatus: import(".prisma/client").$Enums.UserStatus;
        roleId: string;
        createdAt: Date;
        updatedAt: Date;
        createdBy: import(".prisma/client").Prisma.JsonValue;
        updatedBy: import(".prisma/client").Prisma.JsonValue;
        deletedBy: import(".prisma/client").Prisma.JsonValue;
    }>;
    findAll(): string;
    findOne(id: string): string;
    update(id: string, updateUserDto: UpdateUserDto): string;
    remove(id: string): string;
}
