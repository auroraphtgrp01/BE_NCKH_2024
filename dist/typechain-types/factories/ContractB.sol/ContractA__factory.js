"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractA__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "_nameA",
                type: "string",
            },
            {
                internalType: "string",
                name: "_nameB",
                type: "string",
            },
            {
                internalType: "string",
                name: "_nameC",
                type: "string",
            },
            {
                internalType: "string",
                name: "_nameD",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "nameA",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "nameB",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "nameC",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "nameD",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_nameA",
                type: "string",
            },
        ],
        name: "setNameA",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_nameB",
                type: "string",
            },
        ],
        name: "setNameB",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_nameC",
                type: "string",
            },
        ],
        name: "setNameC",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_nameD",
                type: "string",
            },
        ],
        name: "setNameD",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class ContractA__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_nameA, _nameB, _nameC, _nameD, overrides) {
        return super.getDeployTransaction(_nameA, _nameB, _nameC, _nameD, overrides || {});
    }
    deploy(_nameA, _nameB, _nameC, _nameD, overrides) {
        return super.deploy(_nameA, _nameB, _nameC, _nameD, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ContractA__factory = ContractA__factory;
ContractA__factory.bytecode = _bytecode;
ContractA__factory.abi = _abi;
//# sourceMappingURL=ContractA__factory.js.map